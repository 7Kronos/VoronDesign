#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                * Probe Ready Position                  |
#  |                                  X150 Y150                             |
#  |                                                                        |
#  |                                                                        |
#  | * Dock Re-entry staging  position                                      |
#  |   X0 Y70                                                               |
#  |                                                                        |
#  |                                                                        |
#  | * Dock Exit Position                                                   | 
#  |   X0 Y40                                                               |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |   X0 Y0    X30 Y0       X100 Y0                                        |
#  | * Dock   * Dock Side  * Dock Preflight                                 |
#  |________________________________________________________________________| 
#
# Above is example 300x300 bed to coorelate with macros and movements below.
# This example is for a fixed dock, fixed gantry/carraige and moving bed motion system. 
# RailCore, Ender5, V-Core3, etc...
# For moving gantry sytem like Voron 2.4, there are some subltle things to change.
# We have attempetd indicate those in the comments throughout the example code.   
# Z elevation is shown in movements to ensure adequate Z elevation to avoid crashes. 
# With the coupling magnets +/- 2mm of the nozzle the probe trigger height is on the
# ordeer of 12mm, so 15mm is used as a safe height.
#
# the printer.cfg-snip.txt has the following config settings 
# # 
# #...
# # ad this include statement at the head of the config file
# [include euclid.cfg]
# #
#
# #
# # enable enable_force_move to enable FORCE_MOVE and SET_KINEMATIC_POSIITION
# enable_force_move:true
# # ...
#
# It is assumed that there is a seperate Z-endstop that is used to home Z
# IF YOU ARE USING PROBE AS ENDSTOP AND PROBE homing_overide must be altered
#
# some configurtions may need FORCE_MOVE enabled for kinematic position functionS
# https://www.klipper3d.org/Config_Reference.html?h=force_move#force_move
#
# Movement Locations:
#    Users need to identify these locations and customize for their deployment: 
#       Pre-flight position X100 Y20 located to ensure clear travel path to dock
#       Dock Adjacent position X30 Y0 to provide short lateral travel for pickup and swipe off
#       Probe pickup over dock X0 Y0
#       Dock exit Position X0 Y40
#       Probe Ready Position X150 Y0 center of bed
#
# the above list of coordiantes get used in the movement macros below
#


[probe]
##    Euclid Probe
pin: ^PA3                    ; use pin PA0 and enable internal pullup resistor as this is an NC switch  use ! to invert if needed
x_offset: 2.0                ; probe is offset 2.0mm from nozzle
y_offset: 16.0               ; probe is +25mm from nozzle in Y direction
z_offset: 11.35              ; trigger point is 9.5mm below nozzle. larger numbers move effective Z0 CLOSER to the nozzle
speed: 5                     ; probing speed of 5mm/second ideal is <10mm/sec  
samples: 1                   ; number of probes to perform per sample
samples_result: average      ; normalization method: see config reference
sample_retract_dist: 2.0
samples_tolerance: 0.0075
samples_tolerance_retries: 3

#
# example homing overide to use Euclid as an endstop and Z-probe
# example assumes that the bed is 300x300
# assumes homing Z at center of bed
# assumes that macro for probe deploy and retract below are called M401 and M402
#
#
# [homing_override]
# gcode: SET_KINEMATIC_POSITION Z=0
#  G0 Z15 F500           ; raise bed to 15
#  G28 X Y               ; home Y & Y
#  M401                  ; deploy Euclid Probe
#  G0 X150 Y150 F6000    ; move to X150 Y150
#  G28 Z                 ; home Z
#  G0 Z15 F500           ; raise bed to 15
#  M402                  ; retract Euclid Probe
# axes: z
# set_position_z: -5

# [homing_override]
# set_position_z: 10
# axes: xy
# gcode:
#     G28 Z0

# [homing_override]
# set_position_z: 10
# axes: z
# gcode:
#     error_if_probe_deployed
#     G90
#     G1 Z20 F600
#     G1 X96 Y307 F3600
#     G28 Z0

[safe_z_home]
home_xy_position:96,307  # <-------------------------------Adapt to your Z Endstop position
speed:100
z_hop:15


# variable_z_endstop_x:         96
# variable_z_endstop_y:         307



# This cfg contains all the necessary definitions, macros and settings to use the Euclid Probe and the Bedmount attached to the
# left side of the left bed extrusion.
#
#
# What it does? 
# It is using the Z-Endstop only to locate the Probedock, the real Z 0-Point is measured afterwards using the Euclid.
#
# The calculation of the Z 0 Point is done by 5 Measurements in the middle of the bed to get a better idea of the "real" height. 
# The result of this is an average out of the 5 Z heights, each of the 5 Points is calculated by using the median out of the samples.
#
#               +++ Point location on the Bed +++
#               ---------------------------------
#               |                               |
#               |                               |
#               |          Boundingbox          |
#               |           ---------           |
#               |           | *4 *3 |           |
#               |           |  *5   |           |
#               |           | *1 *2 |           |
#               |           ---------           |
#               |                               |
#               |                               |
#               |                               |
#               ---------------------------------
#
# ProbeBoundingBox sets the square boundry of the sampling area. A setting of 30 would yeild X=30mm & Y=30mm.
# 10% of the bed size is a good start. Please change the ProbeBoundingBox value in the Z Compensation settings below.
#
#   Setting: To determine a starting euclidZCompensation value, take the following steps. Check nozzle clean and
#   free of debris, same for bed. Set euclidZCompensation to 0 to disable G3201 from applying changes, and restart
#   Klipper. Dial-in your Z height as outlined in the procedures found here: https://docs.vorondesign.com/build/startup/.
#   Once you are satisfied with your Z height, run G3201 from the console. Once completed, review the console output
#   for 'Current Average is:' and place that value as euclidZCompensation. Following a save and restart, perform a
#   first-layer print test, babystep Z until happy, and apply the babystep total to the euclidZCompensation value.
#   Increasing this value will set the nozzle closer to the bed, and vice versa. For example, if you were using a
#   value of 9.4 and wanted a little more 'squish', try 9.44.
#
# ! Note: A safety feature exists that checks the distance between the Z-endstop trigger to the newly calculated
#   0-Point; if this difference is greater than the defined ZprobeAbortTolerance, the compensation will not be applied.
# ! Note: For docking and undocking, the probe movement routines are tailored for the probe cradle affixed to the left
#   side, on the outboard left bed extrusion.
#
# This is done using the following macros:
#               - G3201
#               - _CHECK_PROBE1
#               - _CHECK_PROBE2
#               - _CHECK_PROBE3
#               - _CHECK_PROBE4
#               - _CHECK_PROBE5
#               - _CHECK_PROBE6
#
# There is also a "security mechanism" included to check the distance between Z-Endstop 0-Point and new probed 0-Point.
# If this distance is larger than the defined ZprobeAbortTolerance, the new Value will not be applied, and you will have to check
# your Probe / Nozzle or adapt your "variable_euclidZCompensation:"
#
#
# +++++++++++++++++++ Macros jointly maintained by @rkolbi(deepsiks) & @k2dp2k +++++++++++++++++++
#
# You need to disable the following sections in your existing printer.cfg
#
# [probe]
# [safe_z_home]
#
# Insert [include ./voron_retro_euclid.cfg] to your printer.cfg file
#
# Inside this config file you need to adapt the marked lines to your setup (<-----------)
#

#*********  Choose your Printer Size: ********* 

#[include ./printer_size_250.cfg] #<- eg. Voron 2.4 250
#[include ./printer_size_300.cfg] #<- eg. Voron 2.4 300
#[include ./printer_size_350.cfg] #<- eg. Voron 2.4 350


[gcode_macro euclidvars]
#------------------------------------------------- Needed Values -------------------------------------------------- 
variable_euclidX: 25 #over Dock X Here                # X Position directly over probe                                              <-----------
variable_euclidY: 292 #over Dock Y Here                # Y Position directly over probe                                              <-----------
variable_euclidSwipeX: 60                          # X Position, swipe to the side to free probe of dock                         <-----------
variable_euclidSafeDeployZ: 25                     # Z Safe height for deployment approach                                       <-----------
variable_euclidSafeStowZ: 30                       # Z Safe height following stowing the probe (break mag pull)                  <-----------
variable_euclidDeployZ: 1 # adapt to yours           # Lower to just above probe, no physical contact                              <-----------
variable_euclidStowZ: 0.5 # adapt to yours             # Lower to exact postion for dock entry/exit                                  <-----------
variable_defaultWarmNozzle: 160                    # To get the biggest part of nozzle expansion compensated without oozing      <-----------

#------------------------------------------------ Z Compensation ------------------------------------------------- 
variable_euclidZCompensation: 6.65             # Z0 Compensation based off probe height, finetune this using the             <-----------
                                                   # "Papertest and an additional First layer print"
variable_ZprobeSpeed: 3.0                          # Probing speed for Z Measurements                                            <-----------
variable_ProbeBoundingBox: 30                     # Bounding box size to take probe samples, this is used for X & Y.            <-----------
variable_ZprobeSamples: 5                          # Samples probed per Z Point as the point is calculated out of median         <-----------
                                                   # keep this number odd e.g. 3,5,7...
variable_ZprobeTolerance: 0.020                    # Sample Tolerance per Z Point <-----------
variable_ZprobeAbortTolerance: 1.0                 # Tolerance to apply the Measured Z-0 Point or throw an error to check things <-----------
variable_ZprobeRetract: 1.2                        # Retract from each probing for a D2F-5 Switch 1.2 should be good             <-----------
variable_DoApplyMesh: True                         # Apply mesh prior to probe sampling, for Z Compensation
variable_MeshToApply: "NONE"                       # The saved mesh to apply, mesh name must be enclosed with ""
                                                   # *!* To perform a fresh in-situation mesh calibration, instead of loading a saved
                                                   # mesh, use "INSITU" for MeshToApply. This will be applied before Z Comp probing.
                                                   # *!* To completely skip applying mesh, use "NONE" for MeshToApply
gcode:

#*********  Neccecary things.... ********* 
[force_move]
enable_force_move: true

[respond]
default_type: echo

[delayed_gcode prerun]
initial_duration: 1
gcode:
    QUERY_PROBE
    M117 Printer online.
    
#********* Euclid related macros ********* 
# M401 - Deploy Euclid Probe
[gcode_macro M401]
gcode:
    QUERY_PROBE
    {% if printer.probe.last_query %}
        M118 Fetching Euclid Probe.
        _PROBE_DEPLOY
    {% else %}
        M118 ?!Probe is already attached.
    {% endif %}

# M402 - Stow Euclid Probe
[gcode_macro M402]
gcode:
    QUERY_PROBE
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        _PROBE_STOW
    {% else %}
        M118 ?!Probe is not attached.
    {% endif %}

#*********  Euclid Probe Safety Checks
[gcode_macro _do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
        {action_raise_error("ERROR: probe still deployed - remove and return to dock.")}
    {% else %}
        M118 Euclid Probe has been stowed.  
    {% endif %}

#.................................................................................................................
[gcode_macro _error_if_probe_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_deployed

#.................................................................................................................
[gcode_macro _do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
        {action_raise_error("ERROR: probe unsuccessfully deployed.")}
    {% else %}
        M118 Euclid Probe has been attached.
    {% endif %}

#.................................................................................................................
[gcode_macro _error_if_probe_not_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_not_deployed

#.................................................................................................................
[gcode_macro _PROBE_DEPLOY]
gcode:
    G90
    G0 Z{printer["gcode_macro euclidvars"].euclidsafedeployz|float} F800
    G0 X{printer["gcode_macro euclidvars"].euclidx|float} Y{printer["gcode_macro euclidvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro euclidvars"].eucliddeployz|float} F800
    G0 X{printer["gcode_macro euclidvars"].euclidswipex|float} Y{printer["gcode_macro euclidvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro euclidvars"].euclidsafedeployz|float} F800
    _error_if_probe_not_deployed ; Verify probe attached

#.................................................................................................................
[gcode_macro _PROBE_STOW]
gcode:
    G90
    G0 X{printer["gcode_macro euclidvars"].euclidswipex|float} Y{printer["gcode_macro euclidvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro euclidvars"].euclidstowz|float} F500
    G0 X{printer["gcode_macro euclidvars"].euclidx|float} Y{printer["gcode_macro euclidvars"].euclidy|float} F1000
    G0 Z{printer["gcode_macro euclidvars"].euclidsafestowz|float} F800
    _error_if_probe_deployed ; Verify probe detached

#.................................................................................................................
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_ORIGINIAL
gcode:
    QUERY_PROBE
    M401
    QUAD_GANTRY_LEVEL_ORIGINIAL
    M402

#.................................................................................................................
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_ORIGINIAL
gcode:
    QUERY_PROBE
    M401
    BED_MESH_CALIBRATE_ORIGINIAL
    M402

#.................................................................................................................
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUERY_PROBE
    {% if printer.probe.last_query %}
        M118 Fetching Euclid Probe.
        _PROBE_DEPLOY
    {% endif %}
    QUAD_GANTRY_LEVEL_ORIGINIAL
    G28
    M118 Stowing Euclid Probe.
    _PROBE_STOW
    QUERY_PROBE


#********* Z Probing Macros ********* 
#.................................................................................................................
[gcode_macro G3201]  # This one should be used instead of the normal G32 / QGL in the Print_start macro
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set defaultWN = printer["gcode_macro euclidvars"].defaultwarmnozzle|float %}
    {% set ZSpeed = printer["gcode_macro euclidvars"].zprobespeed|float %}
    {% set ZSamples = printer["gcode_macro euclidvars"].zprobesamples|int %}
    {% set ZTolerance = printer["gcode_macro euclidvars"].zprobetolerance|float %}
    {% set ZRetract = printer["gcode_macro euclidvars"].zproberetract|float %}
    {% set ZP_CAL = printer["gcode_macro euclidvars"].euclidzcompensation|float %}
    {% set MeshToApply = printer["gcode_macro euclidvars"].meshtoapply|default() %}
    BED_MESH_CLEAR
    M118 Probing Z is done using following Settings:
    M118 Speed: {ZSpeed} mm/s
    M118 Samples: {ZSamples}
    M118 Sample Tolerance: {ZTolerance} mm
    M118 Sample Retract: {ZRetract} mm
    M118 Your Current Z Compensation Value is: {ZP_CAL} mm
    M118 Heating up Nozzle to {defaultWN} C...
    M109 S{defaultWN}
    G4 P1000
    {% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %}
    QUERY_PROBE
    M401
    QUAD_GANTRY_LEVEL_ORIGINIAL
    G28 Z
    {% if MeshToApply == "INSITU" %}
        BED_MESH_CALIBRATE_ORIGINIAL SAMPLES=3
        BED_MESH_PROFILE SAVE=INSITUMESH
        BED_MESH_OUTPUT PGP=0
    {% else %}
        {% if printer["gcode_macro euclidvars"].doapplymesh|default() == true and MeshToApply != "NONE" %}
            BED_MESH_PROFILE LOAD={MeshToApply}
            M118 Applying {MeshToApply} mesh prior to sampling.
        {% else %}
            M118 Not applying a mesh prior to sampling.
        {% endif %}
    {% endif %}
    G90
    G0 X{X_MID} Y{Y_MID} F3500
    G91  
    PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries=3 sample_retract_dist={ZRetract}
    _CHECK_PROBE1

[gcode_macro _CHECK_PROBE1]
gcode:
    {% set PROBE_PASS = printer.probe.last_z_result|float %}
    {% set ZSpeed = printer["gcode_macro euclidvars"].zprobespeed|float %}
    {% set ZSamples = printer["gcode_macro euclidvars"].zprobesamples|int %}
    {% set ZTolerance = printer["gcode_macro euclidvars"].zprobetolerance|float %}
    {% set ZRetract = printer["gcode_macro euclidvars"].zproberetract|float %}
    {% set ProbeBB = printer["gcode_macro euclidvars"].probeboundingbox|float %}
    G0 Z2 F500
    G0 X-{(ProbeBB/2)} Y-{(ProbeBB/2)} F2500
    PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries=3 sample_retract_dist={ZRetract}
    _CHECK_PROBE2 PASS={PROBE_PASS}


[gcode_macro _CHECK_PROBE2]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result|float %}
    {% set ZSpeed = printer["gcode_macro euclidvars"].zprobespeed|float %}
    {% set ZSamples = printer["gcode_macro euclidvars"].zprobesamples|int %}
    {% set ZTolerance = printer["gcode_macro euclidvars"].zprobetolerance|float %}
    {% set ZRetract = printer["gcode_macro euclidvars"].zproberetract|float %}
    {% set ProbeBB = printer["gcode_macro euclidvars"].probeboundingbox|float %}
    G0 Z2 F500
    G0 X{ProbeBB} F2500
    PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries=3 sample_retract_dist={ZRetract}
    _CHECK_PROBE3 PASS={PROBE_PASS + PASS}

[gcode_macro _CHECK_PROBE3]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result|float %}
    {% set ZSpeed = printer["gcode_macro euclidvars"].zprobespeed|float %}
    {% set ZSamples = printer["gcode_macro euclidvars"].zprobesamples|int %}
    {% set ZTolerance = printer["gcode_macro euclidvars"].zprobetolerance|float %}
    {% set ZRetract = printer["gcode_macro euclidvars"].zproberetract|float %}
    {% set ProbeBB = printer["gcode_macro euclidvars"].probeboundingbox|float %}
    G0 Z2 F500
    G0 Y{ProbeBB} F2500
    PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries=3 sample_retract_dist={ZRetract}
    _CHECK_PROBE4 PASS={PROBE_PASS + PASS}


[gcode_macro _CHECK_PROBE4]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result|float %}
    {% set ZSpeed = printer["gcode_macro euclidvars"].zprobespeed|float %}
    {% set ZSamples = printer["gcode_macro euclidvars"].zprobesamples|int %}
    {% set ZTolerance = printer["gcode_macro euclidvars"].zprobetolerance|float %}
    {% set ZRetract = printer["gcode_macro euclidvars"].zproberetract|float %}
    {% set ProbeBB = printer["gcode_macro euclidvars"].probeboundingbox|float %}
    G0 Z2 F500
    G0 X-{ProbeBB} F2500
    PROBE samples_result=median samples={ZSamples} speed={ZSpeed} samples_tolerance={ZTolerance} samples_tolerance_retries=3 sample_retract_dist={ZRetract}
    _CHECK_PROBE5 PASS={PROBE_PASS + PASS}

[gcode_macro _CHECK_PROBE5]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result %}
    {% set ZSpeed = printer["gcode_macro euclidvars"].zprobespeed|float %}
    {% set ZSamples = printer["gcode_macro euclidvars"].zprobesamples|int %}
    {% set ZTolerance = printer["gcode_macro euclidvars"].zprobetolerance|float %}
    {% set ZRetract = printer["gcode_macro euclidvars"].zproberetract|float %}
    G90
    G0 Z25 F3500
    _CHECK_PROBE6 PASS={(PROBE_PASS + PASS)/5}

[gcode_macro _CHECK_PROBE6]
gcode:
    {% set ZP_CAL = printer["gcode_macro euclidvars"].euclidzcompensation|float %}
    {% set ZAbortTolerance = printer["gcode_macro euclidvars"].zprobeaborttolerance|float %}
    {% set MeshToApply = printer["gcode_macro euclidvars"].meshtoapply|default() %}
    {% set DoApplyMesh = printer["gcode_macro euclidvars"].doapplymesh|int %}
    {% set PASS = params.PASS|float %}
    {% set Z_POS = printer.toolhead.position.z|float %}
    {% set Z_OFFSET = PASS - ZP_CAL|float %}
    {% set NEW_CURRENT_Z = (Z_POS - Z_OFFSET) %}
    M118 Current Average is: {PASS}
    M118 Z-Probe calibration is: {ZP_CAL}
    M118 Offset: {Z_OFFSET}
    {% if Z_OFFSET|abs > ZAbortTolerance %}
        M118 ! ! !  Z-OFFSET is > {ZAbortTolerance}mm, check nozzle cleanliness and printer  ! ! !
        M118 Not applying calculated offset to Z.
      {% else %}
    M118 Setting current Z_Height of {Z_POS} to {NEW_CURRENT_Z}
    SET_KINEMATIC_POSITION Z={NEW_CURRENT_Z}
    G4 P1000
    M118 Moving nozzle to newly adjusted Z25.
    G0 Z25 F3500
    G4 P1000
      {% endif %}
    QUERY_PROBE
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        _PROBE_STOW
    {% else %}
        M118 ?!Probe is not attached.
    {% endif %}
    {% if printer["gcode_macro euclidvars"].doapplymesh|default() == false and MeshToApply != "INSITU" and MeshToApply != "NONE" %}
        BED_MESH_PROFILE LOAD={MeshToApply}
        M118 Applied {MeshToApply} mesh post sampling.
    {% endif %}
    PARKCENTER                        
    M118 :-) Ready to Print :-)
    
     
